// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const morningKeyboard = {
  reply_markup: {
    inline_keyboard: [
      [
        { text: '‚úÖ –î–∞, –Ω–∞—á–∏–Ω–∞—é', callback_data: 'start_work' },
        { text: '‚è∞ –û–ø–æ–∑–¥–∞—é', callback_data: 'start_late' }
      ],
      [
        { text: 'üè• –ë–æ–ª—å–Ω–∏—á–Ω—ã–π/–æ—Ç–ø—É—Å–∫', callback_data: 'sick_vacation' }
      ]
    ]
  }
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–µ—á–µ—Ä–Ω–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const eveningKeyboard = {
  reply_markup: {
    inline_keyboard: [
      [
        { text: 'üìù –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç', callback_data: 'already_finished' }
      ],
      [
        { text: 'üí™ –†–∞–±–æ—Ç–∞—é –¥–æ–ª—å—à–µ', callback_data: 'working_longer' }
      ]
    ]
  }
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
const statusKeyboard = {
  reply_markup: {
    inline_keyboard: [
      [
        { text: 'üè¢ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É', callback_data: 'start_work' },
        { text: 'üìä –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç', callback_data: 'already_finished' }
      ]
    ]
  }
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞
const confirmReportKeyboard = {
  reply_markup: {
    inline_keyboard: [
      [
        { text: '‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data: 'confirm_report' },
        { text: '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å', callback_data: 'edit_report' }
      ]
    ]
  }
};

export {
  morningKeyboard,
  eveningKeyboard,
  statusKeyboard,
  confirmReportKeyboard
}; 