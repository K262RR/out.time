const fetch = require('node-fetch');

async function startHandler(ctx) {
  try {
    const telegramId = ctx.from.id;
    const userName = ctx.from.first_name || '–°–æ—Ç—Ä—É–¥–Ω–∏–∫';
    const startPayload = ctx.startPayload; // –¢–æ–∫–µ–Ω –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    if (startPayload) {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞
        const validateResponse = await fetch(`${process.env.API_BASE_URL || 'http://localhost:3000'}/api/bot/validate-invite/${startPayload}`);
        const validateData = await validateResponse.json();

        if (!validateData.success) {
          return ctx.reply(`‚ùå ${validateData.error}\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∑–∞ –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–æ–π –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è.`);
        }

        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        const registerResponse = await fetch(`${process.env.API_BASE_URL || 'http://localhost:3000'}/api/bot/register`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            telegram_id: telegramId,
            name: userName,
            invite_token: startPayload
          })
        });

        const registerData = await registerResponse.json();

        if (registerData.success) {
          await ctx.reply(`üéâ ${registerData.message}

‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!

‚è∞ *–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*
‚Ä¢ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00 —è –±—É–¥—É —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –æ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã
‚Ä¢ –í 18:00 - –ø–æ–ø—Ä–æ—à—É –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ
‚Ä¢ –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞

üìù *–ö–æ–º–∞–Ω–¥—ã:*
/status - —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
/help - —Å–ø—Ä–∞–≤–∫–∞

–£–¥–∞—á–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è! üöÄ`, 
            { parse_mode: 'Markdown' });

          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
          setTimeout(() => {
            ctx.telegram.sendMessage(ctx.chat.id, '–ü—Ä–æ–≤–µ—Ä–∏–º –≤–∞—à —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —Å—Ç–∞—Ç—É—Å...');
            require('./statusHandler')(ctx);
          }, 2000);

        } else {
          ctx.reply(`‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${registerData.error}`);
        }

      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
        ctx.reply('üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
      }

    } else {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      try {
        const statusResponse = await fetch(`${process.env.API_BASE_URL || 'http://localhost:3000'}/api/bot/status/${telegramId}`);
        const statusData = await statusResponse.json();

        if (statusData.success) {
          // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
          ctx.reply(`üëã –ü—Ä–∏–≤–µ—Ç, ${statusData.employee.name}!

–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.

üìä –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
üìù –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏

–•–æ—Ä–æ—à–µ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è! ‚ú®`);

          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
          setTimeout(() => {
            require('./statusHandler')(ctx);
          }, 1000);

        } else {
          // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
          ctx.reply(`üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É—á–µ—Ç–∞ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ *Out Time*!

üîó –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–∞–º –Ω—É–∂–Ω–∞ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–æ–º–ø–∞–Ω–∏–∏.

üìû *–ß—Ç–æ –¥–µ–ª–∞—Ç—å:*
1. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏
2. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –¥–ª—è –≤–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ

üí° *–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:*
\`https://t.me/your_bot?start=—Ç–æ–∫–µ–Ω\`

‚ùì –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help`, 
            { parse_mode: 'Markdown' });
        }

      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', error);
        ctx.reply('üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ startHandler:', error);
    ctx.reply('üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
  }
}

module.exports = startHandler; 